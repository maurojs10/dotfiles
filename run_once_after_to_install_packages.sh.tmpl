{{ if eq .chezmoi.os "linux" -}}
#!/bin/dash

if [ ! -e '{{ .ssh.keyfile }}' ]; then
  echo "\n * * Generate SSH key * * \n"
  ssh-keygen -f '{{ .ssh.keyfile }}' -t '{{ .ssh.keytype }}' -C '{{ .chezmoi.hostname }}' -N ''
fi

echo "\n * * Install Git * * \n"
sudo apt install git -y

echo "\n * * Install micro * * \n"
sudo apt install micro -y

echo "\n * * Install Visual Studio Code * * \n"
sudo snap install code --classic

echo "\n * * Install GitHub CLI * * \n"
type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
&& sudo apt update \
&& sudo apt install gh -y

echo "\n * * Authenticate with GitHub * * \n"
gh auth login --scopes "admin:public_key admin:ssh_signing_key gist read:org repo"

echo "\n * * Add SSH key to GitHub for authentication * * \n"
gh ssh-key add '{{ .ssh.publickey }}' --type authentication

echo "\n * * Add SSH key to GitHub for signing * * \n"
gh ssh-key add '{{ .ssh.publickey }}' --type signing

echo "\n * * Install Nerd Fonts CaskaydiaMono * * \n"
if [ ! -e ~/.local/share/fonts/CaskaydiaMonoNerdFont-Regular.ttf ]; then
  mkdir -p ~/.local/share/fonts
  chmod 755 ~/.local/share/fonts
  curl -fsSL https://github.com/ryanoasis/nerd-fonts/releases/download/v3.3.0/CascadiaMono.zip -o ~/.local/share/fonts/CascadiaMono.zip
  unzip -o ~/.local/share/fonts/CascadiaMono.zip 'CaskaydiaMonoNerdFont*.ttf' -d ~/.local/share/fonts
  rm -f ~/.local/share/fonts/CascadiaMono.zip
  chmod 644 ~/.local/share/fonts/CaskaydiaMonoNerdFont*.ttf
fi

echo "\n * * Finished installing packages * * \n"

echo "\n * * Create folder for source code repositories * * \n"
if [ ! -e ~/Repositories ]; then
  mkdir -p ~/Repositories
fi

echo "\n * * Create folder for source code subfolders * * \n"
if [ ! -e ~/source ]; then
  mkdir -p ~/source
fi

echo "\n * * Create symlink for source code repositories * * \n"
if [ ! -e ~/source/repos ]; then
  ln -s ~/Repositories ~/source/repos
fi

exit 0
{{ else if eq .chezmoi.os "darwin" -}}
#!/bin/zsh

if [ ! -e '{{ .ssh.keyfile }}' ]; then
  echo "\n * * Generate SSH key * * \n"
  ssh-keygen -f '{{ .ssh.keyfile }}' -t '{{ .ssh.keytype }}' -C '{{ .chezmoi.hostname }}' -N ''
fi

echo "\n * * Install Git * * \n"
brew install git

echo "\n * * Install micro * * \n"
brew install micro

echo "\n * * Install Visual Studio Code * * \n"
brew install --cask visual-studio-code

echo "\n * * Install GitHub CLI * * \n"
brew install gh

echo "\n * * Authenticate with GitHub * * \n"
gh auth login --scopes "admin:public_key admin:ssh_signing_key gist read:org repo"

echo "\n * * Add SSH key to GitHub for authentication * * \n"
gh ssh-key add '{{ .ssh.publickey }}' --type authentication

echo "\n * * Add SSH key to GitHub for signing * * \n"
gh ssh-key add '{{ .ssh.publickey }}' --type signing

echo "\n * * Finished installing packages * * \n"

echo "\n * * Create folder for source code repositories * * \n"
if [ ! -e ~/Repositories ]; then
  mkdir -p ~/Repositories
fi

echo "\n * * Create folder for source code subfolders * * \n"
if [ ! -e ~/source ]; then
  mkdir -p ~/source
fi

echo "\n * * Create symlink for source code repositories * * \n"
if [ ! -e ~/source/repos ]; then
  ln -s ~/Repositories ~/source/repos
fi

exit 0
{{ end -}}
