#!/bin/bash

# {{ if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
if [ ! -e '{{ .ssh.keyfile }}' ]; then
  if [ ! -e ~/.ssh ] && [ -e "$USERPROFILE/.ssh" ]; then
    echo -e "\n * * Create symlink for SSH folder * * \n"
    ln -s "$USERPROFILE/.ssh" ~/.ssh
    chmod 700 ~/.ssh
    chmod 600 ~/.ssh/*
  fi
fi
# {{ else }}
if [ ! -e '{{ .ssh.keyfile }}' ]; then
  echo -e "\n * * Generate SSH key * * \n"
  ssh-keygen -f '{{ .ssh.keyfile }}' -t '{{ .ssh.keytype }}' -C '{{ .chezmoi.hostname | lower }}' -N ''
fi
# {{ end }}

if ! command -v git &> /dev/null; then
  echo -e "\n * * Install Git * * \n"
  sudo add-apt-repository ppa:git-core/ppa -y \
  && sudo apt update \
  && sudo apt install git -y
fi

if ! command -v micro &> /dev/null; then
  echo -e "\n * * Install micro * * \n"
  sudo apt install micro -y
fi

# {{ if not (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
if ! command -v code &> /dev/null; then
  echo -e "\n * * Install Visual Studio Code * * \n"
  sudo snap install code --classic
fi
# {{ end }}

if ! command -v gh &> /dev/null; then
  echo -e "\n * * Install GitHub CLI * * \n"
  type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
  && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
  && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
  && sudo apt update \
  && sudo apt install gh -y
fi

if ! gh auth status &> /dev/null; then
  echo -e "\n * * Authenticate with GitHub * * \n"
  gh auth login --scopes "admin:public_key admin:ssh_signing_key gist read:org repo"
fi

echo -e "\n * * Add SSH key to GitHub for authentication * * \n"
gh ssh-key add '{{ .ssh.publickey }}' --type authentication

echo -e "\n * * Add SSH key to GitHub for signing * * \n"
gh ssh-key add '{{ .ssh.publickey }}' --type signing

echo -e "\n * * Update allowed signers from GitHub * * \n"
GH_USER=$(gh api user --jq '.login')
gh api "users/$GH_USER/ssh_signing_keys" --paginate --jq '.[].key' > '{{ .ssh.allowedSigners }}'

if [ ! -e ~/.local/share/fonts/CaskaydiaMonoNerdFont-Regular.ttf ]; then
  echo -e "\n * * Install Nerd Fonts CaskaydiaMono * * \n"
  mkdir -p ~/.local/share/fonts
  chmod 755 ~/.local/share/fonts
  type -p unzip >/dev/null || (sudo apt update && sudo apt install unzip -y)
  curl -fsSL https://github.com/ryanoasis/nerd-fonts/releases/download/v3.3.0/CascadiaMono.zip -o ~/.local/share/fonts/CascadiaMono.zip
  unzip -o ~/.local/share/fonts/CascadiaMono.zip 'CaskaydiaMonoNerdFont*.ttf' -d ~/.local/share/fonts
  rm -f ~/.local/share/fonts/CascadiaMono.zip
  chmod 644 ~/.local/share/fonts/CaskaydiaMonoNerdFont*.ttf
fi

if ! command -v starship &> /dev/null; then
  echo -e "\n * * Install Starship * * \n"
  curl -sS https://starship.rs/install.sh | sh -s -- --yes
fi

# shellcheck disable=SC2016
if ! grep -Fxq 'eval "$(starship init bash)"' ~/.bashrc; then
  echo -e "\n * * Add Starship to bash configuration * * \n"
  echo 'eval "$(starship init bash)"' >> ~/.bashrc
fi

# {{ if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
if [ ! -e ~/source ] && [ -e "$USERPROFILE/source" ]; then
  echo -e "\n * * Create symlink for source code subfolders * * \n"
  ln -s "$USERPROFILE/source" ~/source
fi
# {{ else }}
if [ ! -e ~/source ]; then
  echo -e "\n * * Create folder for source code subfolders * * \n"
  mkdir -p ~/source
fi

if [ ! -e ~/source/repos ]; then
  echo -e "\n * * Create subfolder for source code repositories * * \n"
  mkdir -p ~/source/repos
fi
# {{ end }}

# {{ if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
if [ ! -e ~/.aws ] && [ -e "$USERPROFILE/.aws" ]; then
  echo -e "\n * * Create symlink for AWS folder * * \n"
  ln -s "$USERPROFILE/.aws" ~/.aws
fi
# {{ end }}

exit 0
