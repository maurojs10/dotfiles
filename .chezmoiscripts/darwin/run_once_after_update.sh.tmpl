#!/bin/zsh

if [ ! -e '{{ .ssh.keyfile }}' ]; then
  echo -e "\n * * Generate SSH key * * \n"
  ssh-keygen -f '{{ .ssh.keyfile }}' -t '{{ .ssh.keytype }}' -C '{{ .chezmoi.hostname | lower }}' -N ''
fi

if ! command -v git &> /dev/null; then
  echo -e "\n * * Install Git * * \n"
  brew install git
fi

if ! command -v micro &> /dev/null; then
  echo -e "\n * * Install micro * * \n"
  brew install micro
fi

if ! command -v code &> /dev/null; then
  echo -e "\n * * Install Visual Studio Code * * \n"
  brew install --cask visual-studio-code
fi

if ! command -v gh &> /dev/null; then
  echo -e "\n * * Install GitHub CLI * * \n"
  brew install gh
fi

if ! gh auth status -h github.com &> /dev/null; then
  echo -e "\n * * Authenticate with GitHub * * \n"
  gh auth login -h github.com -p ssh --scopes "admin:public_key admin:ssh_signing_key gist read:org repo" --skip-ssh-key
fi

echo -e "\n * * Add SSH key to GitHub for authentication * * \n"
gh ssh-key add '{{ .ssh.publickey }}' --type authentication

echo -e "\n * * Add SSH key to GitHub for signing * * \n"
gh ssh-key add '{{ .ssh.publickey }}' --type signing

echo -e "\n * * Update allowed signers from GitHub * * \n"
GH_USER=$(gh api user --jq '.login')
gh api "users/$GH_USER/ssh_signing_keys" --paginate --jq '.[].key' > '{{ .ssh.allowedSigners }}'

if [ ! -e ~/source ]; then
  echo -e "\n * * Create folder for source code subfolders * * \n"
  mkdir -p ~/source
fi

if [ ! -e ~/source/repos ]; then
  echo -e "\n * * Create subfolder for source code repositories * * \n"
  mkdir -p ~/source/repos
fi

exit 0
